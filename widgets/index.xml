<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Widgets on Metricio - Dashboards for teams built with React and Node</title>
    <link>https://metricio.co/widgets/</link>
    <description>Recent content in Widgets on Metricio - Dashboards for teams built with React and Node</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://metricio.co/widgets/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Build Status</title>
      <link>https://metricio.co/widgets/build-status/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://metricio.co/widgets/build-status/</guid>
      <description>The build status widget is designed to show the outcome of a build process. Usually as part of a continuous integration process. The widget has two design states success and fail. Success is green and fail is red. Any other state is blue e.g. pending or running.
Usage import BuildStatusWidget from &#39;../widgets/build-status/widget&#39;;  &amp;lt;BuildStatusWidget name=&amp;quot;DemoMaster&amp;quot; title=&amp;quot;Build - Master&amp;quot; size=&amp;quot;medium&amp;quot; /&amp;gt;  Props    Prop Description Required     name Name of widget.</description>
    </item>
    
    <item>
      <title>Number</title>
      <link>https://metricio.co/widgets/number/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://metricio.co/widgets/number/</guid>
      <description>The number widget can be found at src/widgets/number/widget.jsx. Because the number widget is the most commonly used widget, the background colours are randomised to keep the dashboards unique. So don&amp;rsquo;t be surprised if you see them change colour.
Usage import NumberWidget from &#39;../widgets/number/widget&#39;;  &amp;lt;NumberWidget name=&amp;quot;MyCatWidget&amp;quot; title=&amp;quot;Catz Conversion&amp;quot; metric=&amp;quot;%&amp;quot; /&amp;gt;  Props    Prop Description Required     name Name of widget. Used to update the widget when a job completes Yes   title Title of widget.</description>
    </item>
    
    <item>
      <title>Ping</title>
      <link>https://metricio.co/widgets/ping/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://metricio.co/widgets/ping/</guid>
      <description>The ping widget is used to display the outcome of a request to an API endpoint or website and report whether the response was a 200 and how long it took to get that response. If the response was 200, then the widget will remain orange. However, if the response is anything other than 200 the widget will be red.
Usage import PingWidget from &#39;../widgets/ping/widget&#39;;  &amp;lt;PingWidget name=&amp;quot;GooglePing&amp;quot; title=&amp;quot;Google&amp;quot; /&amp;gt;  Props    Prop Description Required     name Name of widget.</description>
    </item>
    
    <item>
      <title>Sparkline</title>
      <link>https://metricio.co/widgets/sparkline/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://metricio.co/widgets/sparkline/</guid>
      <description>The sparkline widget is to help quickly visualise the history of a metric. The widget plots all supplied values on a sparkline line chart as best as it can. The last value provided will be assumed as the most up to date value to display.
Usage import SparklineWidget from &#39;../widgets/sparkline/widget&#39;;  &amp;lt;SparklineWidget name=&amp;quot;DemoUsers&amp;quot; title=&amp;quot;Users&amp;quot; format=&amp;quot;0.00a&amp;quot; /&amp;gt;  Props    Prop Description Required     name Name of widget.</description>
    </item>
    
    <item>
      <title>Text</title>
      <link>https://metricio.co/widgets/text/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://metricio.co/widgets/text/</guid>
      <description>The text widget is the most basic widget available. This widget displays text based on the output of a job, e.g. showing if you are deployed to green or blue if you do blue/green deployments.
Usage import TextWidget from &#39;../widgets/text/widget&#39;;  &amp;lt;TextWidget name=&amp;quot;Deployment&amp;quot; title=&amp;quot;Green/Blue&amp;quot; /&amp;gt;  Props    Prop Description Required     name Name of widget. Used to update the widget when a job completes Yes   title Title of widget.</description>
    </item>
    
  </channel>
</rss>